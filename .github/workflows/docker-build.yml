name: Docker Build and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push base image
        uses: docker/build-push-action@v4
        with:
          context: ./build/base
          file: ./build/base/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:base
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:base
          cache-to: type=inline

      - name: Build and push r-minimal image
        uses: docker/build-push-action@v4
        with:
          context: ./build/r-minimal
          file: ./build/r-minimal/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:r-minimal
          cache-from: |
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:base
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:r-minimal
          cache-to: type=inline

      - name: Build and push jupyter-playground image
        uses: docker/build-push-action@v4
        with:
          context: ./build/jupyter-playground
          file: ./build/jupyter-playground/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: |
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:base
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:r-minimal
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline

      - name: Build and push jupyterhub image
        uses: docker/build-push-action@v4
        with:
          context: ./build/jupyterhub
          file: ./build/jupyterhub/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:jupyterhub
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:jupyterhub
          cache-to: type=inline

      # --- Deployment steps would go here based on event type (push main, release) ---
      # Example placeholder:
      # - name: Deploy to Staging
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: echo "Deploying staging..." # Replace with actual deployment commands
      #
      # - name: Deploy to Production
      #   if: github.event_name == 'release'
      #   run: echo "Deploying production for release ${{ github.event.release.tag_name }}..." # Replace with actual deployment commands 